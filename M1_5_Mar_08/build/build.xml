<?xml version="1.0" encoding="UTF-8"?>
<project name="Cab2bAdmin" basedir="..">

	<property file="conf/server.properties" />
	<property name="workarea.dir" location="workarea" />
	<property name="target.dir" location="${workarea.dir}/war" />
	<property name="source.dir" location="src" />
	<property name="images.dir" location="images" />
	<property name="jsp.dir" location="jsp" />
	<property name="conf.dir" location="conf" />
	<property name="flexclient.dir" location="flexclient" />
	<property name="javascript.dir" location="javascript" />
	<property name="css.dir" location="css" />
	<property name="tlds.dir" location="tlds" />
	<property name="lib.dir" location="lib" />
	<property name="jboss.deploy.dir" location="${jboss.home}/server/default/deploy" />
	<property name="war.file" location="${workarea.dir}/cab2badmin.war" />
	<property name="classes.dir" location="${target.dir}/WEB-INF/classes" />
	<property name="extra_lib.dir" value="extra_lib" />
	<property name="APP_ROOT" value="flexclient" />
	<property name="flex.dir" location="flex" />
	<path id="source.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="xdoclet.classpath">
	<path refid="source.classpath" />
	</path>

	<!-- =============================================================================== -->
	<target name="deploy.jboss" depends="war" description="clean up">
		<!--echo message="${jboss.deploy.dir}" /-->
		<copy overwrite="true" file="${lib.dir}/mysql-connector-java-3.0.16-ga-bin.jar" todir="${jboss.home}/server/default/lib" />
		<copy overwrite="true" file="${lib.dir}/oracleDriver.jar" todir="${jboss.home}/server/default/lib" />
		<copy overwrite="true" file="${war.file}" todir="${jboss.home}/server/default/deploy" />
		<copy overwrite="true" file="${conf.dir}/admin-ds.xml" todir="${jboss.home}/server/default/deploy" />
	</target>
	<!-- =============================================================================== -->
	<target name="war" depends="clean.all,copy.all,compile.source" description="Creates the caB2Badmin.war in the workarea directory using deployment descriptor (web.xml) from conf directory">
		<war destfile="${war.file}" webxml="${conf.dir}/web.xml" update="true">
			<zipfileset dir="${target.dir}/images" prefix="images" />
			<zipfileset dir="${target.dir}/jsp" prefix="jsp" />
			<zipfileset dir="${target.dir}/javascript" prefix="javascript" />
			<zipfileset dir="${target.dir}/css" prefix="css" />
			<zipfileset dir="${target.dir}/flexclient" prefix="flexclient" />
			<webinf dir="${target.dir}/WEB-INF" />
		</war>
	</target>
	<!-- =============================================================================== -->
	<target name="copy.all" description="Creates war directory structure, copies the required files to war-directory structure for caB2B-Admin">
		<!-- Copies all the .css files from css directory to workarea/css/ -->
		<copy overwrite="true" todir="${target.dir}/css">
			<fileset dir="${css.dir}">
				<include name="**/*.css" />
			</fileset>
		</copy>
		<!-- Copies all the .js files from javascript directory to workarea/javascript/ -->
		<copy overwrite="true" todir="${target.dir}/javascript">
			<fileset dir="${javascript.dir}">
				<include name="**/*.js" />
			</fileset>
		</copy>

		<!-- Copies all the image files from images directory to workarea/images/ -->
		<copy overwrite="true" todir="${target.dir}/images">
			<fileset dir="${images.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<copy overwrite="true" todir="${target.dir}/flexclient">
					<fileset dir="${flexclient.dir}">
						<include name="**/*.*" />
					</fileset>
				</copy>
		<copy overwrite="true" todir="${target.dir}/WEB-INF/flex">
							<fileset dir="${flex.dir}"/>
						</copy>
		<!-- Copies all the jsp files(including subfolders) from jsp directory to workarea/jsp/ -->
		<copy overwrite="true" todir="${target.dir}/jsp">
			<fileset dir="${jsp.dir}">
				<include name="**/*.jsp" />
			</fileset>
		</copy>

		<!-- Copies the tiles.xml from conf directory to workarea/WEB-INF -->
		<copy overwrite="true" todir="${target.dir}/WEB-INF/">
			<fileset dir="${conf.dir}">
				<include name="tiles.xml" />
			</fileset>
		</copy>

		<!-- Copies all the property files from conf  directory(excluding tiles.xml & web.xml) to workarea/WEB-INF/classes/ -->
		<copy overwrite="true" todir="${target.dir}/WEB-INF/classes">
			<fileset dir="${conf.dir}">
				<include name="**/*.*" />
				<include name="ApplicationResources.properties"/>
				<exclude name="tiles.xml" />
				<exclude name="web.xml" />
				<exclude name="admin-ds.xml" />
			</fileset>
		</copy>

		<!-- Copies all the .tld files from tlds directory to workarea/WEB-INF/tlds -->
		<copy overwrite="true" todir="${target.dir}/WEB-INF/tlds">
			<fileset dir="${tlds.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<!-- Copies all the .jar files from lib directory to workarea/WEB-INF/lib -->
		<copy overwrite="true" todir="${target.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="j2ee.jar"/>
				<exclude name="log4j-1.2.9.jar"/>
			</fileset>
		</copy>
	</target>

	<!-- =============================================================================== -->
	<target name="compile.source" description="Compile all the .java files and place them to /WEB-INF/classes directory">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${source.dir}" destdir="${classes.dir}" fork="yes" memoryMaximumSize="1024m" includes="**/*.java" debug="true" deprecation="true" classpathref="source.classpath" failonerror="true" nowarn="on" />
		<copy todir="${classes.dir}" overwrite="true">
			<fileset dir="${source.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<!-- =============================================================================== -->
	<target name="clean.all" description="Deletes all the contents of  workarea directory">
		<delete includeemptydirs="true" dir="${workarea.dir}" />
		<mkdir dir="${workarea.dir}" />
	</target>
	

	<target name="generate-query.hbm" description="Generates Hibernate class descriptor files.">
		<!-- Define the hibernatedoclet task -->
		<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
			<classpath refid="xdoclet.classpath" />
		</taskdef>

		<!-- Execute the hibernatedoclet task -->
		<hibernatedoclet destdir="${source.dir}" excludedtags="@version,@author,@todo" force="${generateforce}" mergedir="${source.dir}" verbose="false">
			<fileset dir="${source.dir}">
				<include name="**/edu/wustl/cab2b/admin/beans/*.java" />
			</fileset>
			<hibernate version="2.0" />
		</hibernatedoclet>
		
		<!-- Upgrade grammar from Hibernate2 to Hibernate3 -->
        <replace dir="${source.dir}">
        	<include name="**/edu/wustl/cab2b/admin/beans/*hbm.xml" />
        	
            <replacefilter token="readonly=" value="inverse="/>
            <replacefilter token="role=" value="name="/>
            <replacefilter token="hibernate-mapping-2.0.dtd" value="hibernate-mapping-3.0.dtd"/>
            <replacefilter token="&lt;hibernate-mapping&gt;" value="&lt;hibernate-mapping default-lazy=&quot;false&quot;&gt;"/>      
        </replace>

		<copy todir="src/edu/wustl/cab2b/admin/hbm" overwrite="true">
			<fileset dir="src/edu/wustl/cab2b/admin/beans">
				<include name="*.hbm.xml" />
			</fileset>
		</copy>

		<delete>
			<fileset dir="src/edu/wustl/cab2b/admin/beans" includes="**/*.hbm.xml" />
		</delete>
	</target>

	<target name="generate.query.schema.mysql">
		<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
			<classpath>
				<pathelement location="bin/edu/wustl/cab2b/admin/beans/" />
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<path refid="source.classpath"/>
			</classpath>
		</taskdef>

		<schemaexport properties="conf/mysql_db.properties" quiet="yes" text="yes" delimiter=";" output="dbscripts/query_mysql.sql" >
			<fileset dir="src/edu/wustl/cab2b/admin/hbm">
				<include name="*.hbm.xml" />
			</fileset>
		</schemaexport>
	</target>
	
		<target name="generate.query.schema.oracle">
		<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
			<classpath>
				<pathelement location="bin/edu/wustl/cab2b/admin/beans/" />
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<path refid="source.classpath"/>
			</classpath>
		</taskdef>

		<schemaexport properties="oracle_db.properties" quiet="yes" text="yes" delimiter=";" output="dbscripts/query_oracle.sql" >
			<fileset dir="src/edu/wustl/cab2b/admin/hbm">
				<include name="*.hbm.xml" />
			</fileset>
		</schemaexport>
	</target>
</project>