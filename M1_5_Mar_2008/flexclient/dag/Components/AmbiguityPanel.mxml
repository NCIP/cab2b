<?xml version="1.0" encoding="utf-8"?>

<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="520" height="390" creationComplete="init()" verticalScrollPolicy="off" horizontalScrollPolicy="off">
<mx:Script>
	<![CDATA[
		import mx.controls.DataGrid;
		import mx.controls.CheckBox;
		import mx.binding.utils.BindingUtils;
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;
	    import mx.events.CollectionEvent;
	    import Components.DAGPath;
	    import mx.controls.Alert;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;


	    [Bindable]
		public var pathList:ArrayCollection=new ArrayCollection();;
	    [Bindable]
		public var selectedList:ArrayCollection= null;
		public var nodeList:ArrayCollection =null;						
		public var dagPath:DAGPath = null;
		
		/**
		* Initialization ambiguity panel.
		*/
		private function init():void
        {
        	selectedList = new ArrayCollection()
        	var dg :DataGrid = this.getChildByName("pathGrid") as DataGrid;
        	dg.dataProvider=pathList;
			addEventListener(ClickEvent.CLICK, onSimpleClickEvent);
        }
       /**
       * OK & Cancel event Handler
       */
		public  function closePopUp(event:MouseEvent):void {
				var buttonStr:Array=event.currentTarget.toString().split(".");
				var index:int=(buttonStr.length-1)
	   	 	 	PopUpManager.removePopUp(this);
				if(buttonStr[index]=="OK")
				{
					var len:int = pathList.length;
					for (var i:int=0;i<len;i++)
					{
						dagPath = pathList.getItemAt(i) as DAGPath;
						if (dagPath.isSelected)
						{
							selectedList.addItem(dagPath);
						}
					}
					
					this.parentApplication.rpcService.removeEventListener(ResultEvent.RESULT,this.parentApplication.getPathHandler,false);
					this.parentApplication.rpcService.addEventListener("result",this.parentApplication.linkNodesHandler);
					if(nodeList!=null&&selectedList!=null)
					{
						if(selectedList.length > 1)
						{
							Alert.show("Multiple associations not yet supoorted.");		
							this.parentApplication.rpcService.removeEventListener(ResultEvent.RESULT,this.parentApplication.linkNodesHandler,false);
						}
						else
						{
							this.parentApplication.rpcService.linkNodes(nodeList,selectedList); 
							selectedList.removeAll();
						}
					}
				}
				else
				{
					selectedList=null;
					pathList=null;
					this.parentApplication.cancelHandler(nodeList);
				}
		}

		/**
		* This is the function that will catch the click event
		* that will bubble up from the Checkbox in our DataGrid's itemRenderer
		*/
		private function onSimpleClickEvent(e:ClickEvent):void
		{
			// create refs to the items we care about
			var ir:CheckBoxItemRenderer = e.target as CheckBoxItemRenderer;
			var cb:CheckBox = ir.cb as CheckBox;
			var dagPathVo:DAGPath = e.vo as DAGPath;
		
			// update the appropriate data property based on the CheckBox's selected state
			if(cb.selected)
			{
				dagPathVo.isSelected = true;
			}
			else
			{
				dagPathVo.isSelected = false;
			}
		}
		
	]]>
</mx:Script>

	<mx:DataGrid name="pathGrid" dataProvider="{pathList}" width="500" x="0" height="315" y="0" verticalScrollPolicy="on" horizontalScrollPolicy="off">
		<mx:columns>
			<mx:DataGridColumn headerText="Paths" dataField="toolTip" dataTipField="toolTip" showDataTips="true" width="440" wordWrap="true"/>
			<mx:DataGridColumn headerText="Select" dataField="isSelected" width="60" itemRenderer="Components.CheckBoxItemRenderer" rendererIsEditor="true" editorDataField="selected"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:ControlBar name="controlBar">
		<mx:Spacer width="100%"/>
		<mx:Button name="OK" label="OK" click="closePopUp(event)"/>
		<mx:Button name="Cancel" label="Cancel" click="closePopUp(event)"/>
	</mx:ControlBar>

</mx:Panel>
