<?xml version="1.0" encoding="utf-8"?>

<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="520" height="390" creationComplete="init()" verticalScrollPolicy="off" horizontalScrollPolicy="off" headerColors="red">
<mx:Script>
	<![CDATA[
		import mx.controls.listClasses.ListBase;
		import mx.controls.RadioButton;
		import mx.controls.DataGrid;
		import mx.controls.CheckBox;
		import mx.binding.utils.BindingUtils;
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;
	    import mx.events.CollectionEvent;
	    import Components.DAGPath;
	    import mx.controls.Alert;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		import mx.collections.XMLListCollection;


	    [Bindable]
		public var pathList:ArrayCollection=new ArrayCollection();
	    [Bindable]
		public var curatedPathList:ArrayCollection=new ArrayCollection();
	    [Bindable]
		public var selectedPathList:ArrayCollection=new ArrayCollection();
	    [Bindable]
		public var selectedList:ArrayCollection= null;
	    [Bindable]
		public var isRadioButtonSelected:Boolean=false;
		[Bindable]
		public var lastSelectedIndex:int=0;
		
		
		
		public var nodeList:ArrayCollection =null;						
		public var dagPath:DAGPath = null;
		public var allPathsListMap:Object=null;
		public var callingPage:String="";
		public var isAutoConnect:Boolean=false;
		/**
		* Initialization ambiguity panel.
		*/
		private function init():void
        {
        	selectedList = new ArrayCollection();
        	var dg :DataGrid = this.getChildByName("pathGrid") as DataGrid;
        	//addEventListener(ClickEvent.CLICK, onSimpleClickEvent);
        }
       /**
       * OK & Cancel event Handler
       */
		public  function closePopUp(event:MouseEvent):void {
			
			PopUpManager.removePopUp(this);
			if(event.target.name=="OK")	{
				
					var dataProvider:ArrayCollection =pathGrid.dataProvider as ArrayCollection;
					var selectedPath:DAGPath=dataProvider.getItemAt(pathGrid.selectedIndex) as DAGPath;
					this.parentApplication.rpcService.removeEventListener(ResultEvent.RESULT,this.parentApplication.getPathHandler,false);
					this.parentApplication.rpcService.addEventListener("result",this.parentApplication.linkNodesHandler);
					this.parentApplication.rpcService.linkNodes(nodeList,selectedPath); 
					//selectedList.removeAll();
					
				}
				
				else
				{
					selectedList=null;
					pathList=null;
					this.parentApplication.cancelHandler(nodeList);
				}
				
				
				
			
			/*	var buttonStr:Array=event.currentTarget.toString().split(".");
				var index:int=(buttonStr.length-1)
	   	 	 	PopUpManager.removePopUp(this);
				if(buttonStr[index]=="OK")
				{
					var len:int = pathGrid.dataProvider.length;
					for (var i:int=0;i<len;i++)
					{
						dagPath = pathGrid.dataProvider.getItemAt(i) as DAGPath;
						if (dagPath.isSelected)
						{
							selectedList.addItem(dagPath);
						}
					}
					
					this.parentApplication.rpcService.removeEventListener(ResultEvent.RESULT,this.parentApplication.getPathHandler,false);
					this.parentApplication.rpcService.addEventListener("result",this.parentApplication.linkNodesHandler);
					if(nodeList!=null&&selectedList!=null)
					{
						if(selectedList.length > 1)
						{
							Alert.show("Multiple associations not yet supoorted.");		
							this.parentApplication.rpcService.removeEventListener(ResultEvent.RESULT,this.parentApplication.linkNodesHandler,false);
						}
						else
						{
							this.parentApplication.rpcService.linkNodes(nodeList,selectedList); 
							selectedList.removeAll();
						}
					}
				}
				else
				{
					selectedList=null;
					pathList=null;
					this.parentApplication.cancelHandler(nodeList);
				}*/
				
		}


		private function changeDataProvider(e:MouseEvent):void{
			
			if(e.target.id=="allPath"){
				pathGrid.dataProvider=pathList; 
				curatedPath.enabled=true;
				allPath.enabled=false;
			}
				
			if(e.target.id=="curatedPath"){
				if(curatedPathList.length==0){
				Alert.show("No Path Available ");
				}
				else{
					pathGrid.dataProvider=curatedPathList; 
					allPath.enabled=true;
					curatedPath.enabled=false;
	
				}
			}

		}

		private function setVisibilty():void{
		if(callingPage != null){
			allPath.visible=false;
			curatedPath.visible=false;
			hbox.height=0;
			hbox.visible=false;
			}
		else{
			if(curatedPathList.length==0){
				pathGrid.dataProvider=pathList; 
				curatedPath.enabled=true;
				allPath.enabled=false;
			}
			}
		}


		private function initDataGridData():void{
		
		if(callingPage != null){
			pathGrid.dataProvider=pathList; 
		}
		else{
			if(curatedPathList.length==0){
				pathGrid.dataProvider=pathList; 
				}
			else{
			pathGrid.dataProvider=curatedPathList;
			}
		}
		}

		/**
		* This is the function that will catch the click event
		* that will bubble up from the Checkbox in our DataGrid's itemRenderer
		*/
		private function onSimpleClickEvent(e:ClickEvent):void
		{
		}
		
	]]>
</mx:Script>
	
	<mx:HBox borderStyle="none" id="hbox" x="150" y="0" paddingLeft="20" paddingTop="10"  creationComplete="{setVisibilty()}">

            <mx:Button label="All Paths" id="allPath" click="{changeDataProvider(event)}"   paddingLeft="5"
    paddingRight="5"    paddingTop="5"    />
            <mx:Button label="Curated path" id="curatedPath"   click="{changeDataProvider(event)}" enabled="false"/>
        </mx:HBox>
        
	<mx:DataGrid id="pathGrid" name="pathGrid"  width="500" x="0" height="285" y="40" verticalScrollPolicy="on" horizontalScrollPolicy="off"
	creationComplete="{initDataGridData()}" allowMultipleSelection="false"  >
		<mx:columns>
			<mx:DataGridColumn id="dataColumn" headerText="Available Path " dataField="toolTip" dataTipField="toolTip" showDataTips="true" width="500" wordWrap="true"/>
			<mx:DataGridColumn headerText="Select" dataField="isSelected" width="60" itemRenderer="Components.RadioButtonItemRenderer" rendererIsEditor="true" editorDataField="selected"/>
		</mx:columns>
	</mx:DataGrid>

	<mx:ControlBar name="controlBar">
		<mx:Spacer width="100%"/>
		<mx:Button name="OK" label="OK" click="closePopUp(event)"/>
		<mx:Button name="Cancel" label="Cancel" click="closePopUp(event)"/>
	</mx:ControlBar>

</mx:Panel>
