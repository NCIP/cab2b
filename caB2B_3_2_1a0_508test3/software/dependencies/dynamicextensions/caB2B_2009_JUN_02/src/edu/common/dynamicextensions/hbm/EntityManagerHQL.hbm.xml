<?xml version='1.0'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

 <hibernate-mapping>
 
    <query name="getEntitiesByConceptCode">
       from Entity entity
		   	join entity.semanticPropertyCollection semanticProperty
		   		where semanticProperty.conceptCode = ?
	</query>

	<query name="getAssociation">
		from Association association
           		where  association.entity.name = ?
           		AND association.sourceRole.name = ?

	</query>

	<query name="getAssociations">
       from Association association
	       	where association.entity.id = ? AND
       			   	association.targetEntity.id = ?
	</query>

	<query name="getCollectionAttributeRecord">
       from AttributeRecord collectionAttributeRecord
	       	where collectionAttributeRecord.entity.id = ? AND
       			   	collectionAttributeRecord.attribute.id = ? AND
       			   	     collectionAttributeRecord.recordId = ?
	</query>

	<query name="getAllContainersByEntityGroupId">
	   from edu.common.dynamicextensions.domain.userinterface.Container container
	         	where container.entity.id in
             			(select entity.id
                      		from Entity entity
	                             join entity.entityGroupCollection entityGroup
	                                     where entityGroup.id = ?)
	</query>

	<query name="getContainerOfEntity">
		from edu.common.dynamicextensions.domain.userinterface.Container container
           		where  container.entity.id = ?
	</query>

	<query name="getControlOfAbstractAttribute">
		from Control control
           		where  control.abstractAttribute.id = ?
	</query>

	<query name="getAllContainersBeansByEntityGroupId">
			select container.id,container.caption
			   from edu.common.dynamicextensions.domain.userinterface.Container container
			         	where container.entity.id in
		             			(select entity.id
		                      		from Entity entity
			                             join entity.entityGroupCollection entityGroup
			                                     where entityGroup.id = ?)
	</query>

	<query name="getAllEntityCreatedDateByContainerId">
			select container.id,container.entity.createdDate
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>

	<query name="getAllContainerBeans">
			select container.id,container.caption
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>

	<query name="getAllContainerInformationObjects">
			select container.id,container.caption,container.entity.description
			   from edu.common.dynamicextensions.domain.userinterface.Container container
	</query>



	<query name="getEntityIdForContainerId">
			select container.entity.id
			   from edu.common.dynamicextensions.domain.userinterface.Container container
			   where container.id = ?
	</query>

	<query name="getAllGroupBeans">
		select entityGroup.name,entityGroup.id
			   from EntityGroup entityGroup
			   		where entityGroup.isSystemGenerated = false
	</query>

	<query name="checkDuplicateGroupName">
		select count(*)
			   from EntityGroup entityGroup where entityGroup.name = ?
	</query>

	<query name="getChildrenEntities">
	   from Entity entity
	      where entity.parentEntity.id = ?
	</query>

	<query name="getAssociationByIdentifier">
	   from Association association
	      where association.id = ?
	</query>

	<query name="getAssociationsForTargetEntity">
	   from Association association
	      where association.targetEntity.id = ?
	</query>

	<query name="getMainContainers">
	  select new edu.wustl.common.beans.NameValueBean(mainContainers.caption , mainContainers.id)
		    from EntityGroup entityGroup
		          join entityGroup.mainContainerCollection as mainContainers
 			       		where entityGroup.id =  ?
<!--  Bug# 5094 - Commenting this condition as we should be able to see abstract forms for future editing.
	 To avoid data entry in abstract forms, we need to check the abstract attribute for entity in code. - Ashish 18/9/07
	 -->
<!--			       		  	 and mainContainers.entity.abstract = false   -->
	</query>

	<query name="getContainerCaption">
	  select container.caption
		    from edu.common.dynamicextensions.domain.userinterface.Container container
 			       		where container.id =  ?
	</query>
	<query name="checkContainerForAbstractEntity">
      select container.id
            from edu.common.dynamicextensions.domain.userinterface.Container container
                        where container.id = ?
                        AND container.entity.abstract = ?
  	</query>

	<query name="getAttributeRecords">
		select count(*)
       		from AttributeRecord attributeRecord
	       		where attributeRecord.entity.id = ? AND
       			   	attributeRecord.attribute.id = ?
	</query>
	
	<query name="getAssociationIdsForTargetEntity">
	   select association.id
	   	from edu.common.dynamicextensions.domain.Association association
	      where association.targetEntity.id = ?
	</query>
	
	<query name="getAllEntityInformationObjects">
			select entity.id,entity.name
			   from edu.common.dynamicextensions.domain.Entity entity
	</query>
	
	<query name="getAttributeInformationObjectsForEntity">
			select attribute.id,attribute.name
			   from edu.common.dynamicextensions.domain.Attribute attribute
			   		where attribute.entity.id = ?
	</query>
	
	<query name="getAssociationInformationObjectsForEntity">
			select association.name,association.id,association.sourceRole.name,association.targetRole.name,
				   association.entity.name,association.targetEntity.name, association.entity.id, association.targetEntity.id
			   from edu.common.dynamicextensions.domain.Association association
			   		where association.entity.id = ?
	</query>
	
	<query name="getAllEntityInformationObjectsForGroup">
			select entity.id,entity.name
			   from edu.common.dynamicextensions.domain.Entity entity
			   		join entity.entityGroupCollection entityGroup
                         where entityGroup.name = ?
	</query>
	
	
</hibernate-mapping>