<?xml version ="1.0"?>

<!--Ant Script for create Build for caElmir-->

<project name="caElmir Installation" default="Deploy">
	
	<!--define require dir and Properties -->	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	<classpath>
	    <pathelement location="./lib/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
	<property file="caELMIRInstall.properties"/>
	<property name="base.dir" value="."/>
	<property name="temp.dir" value="./tempCaelmir"/>
<!--	<property name="csm.dir" value="${temp.dir}/tempcsm"/>-->
	<property name="lib.dir" value="${base.dir}/lib"/>
    <property name="mysql.sql.dir" value="${base.dir}/SQL/MySql"/>
	<property name="oracle.sql.dir" value="${base.dir}/SQL/Oracle"/>
	<property name="common.sql.dir" value="${base.dir}/SQL/Common"/>
	<property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect"/>
	<property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect"/>
	
	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect"/>
	<property name="mysql.dialect.h3.string" value="org.hibernate.dialect.MySQLDialect"/>
	<property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="mysql.driver.string" value="org.gjt.mm.mysql.Driver"/>
	<property name="mysql.lib" value="mysql-connector-java-3.0.16-ga-bin.jar"/>
	<property name="oracle.lib" value="oracleDriver.jar"/>
	
	<!-- Check for required properties -->
	<target name="assert">
		<if>
			<equals arg1="" arg2="${jboss.home.dir}"/>
			<then>
				<fail message="The property 'jboss.home.dir' should not be empty"/>
			</then>
		</if>
		<if>
			<or>
				<equals arg1="mysql" arg2="${database.type}"/>
				<equals arg1="oracle" arg2="${database.type}"/>	
			</or>
			<then/>
			<else>
				<fail message="The value of property 'database.type' should be mysql or oracle"/>
			</else>	
		</if>
		<if>
			<equals arg1="" arg2="${database.host}"/>
			<then>
				<fail message="The property 'database.host' should not be empty"/>
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.port}"/>
			<then>
				<fail message="The property 'database.port' should not be empty"/>
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.name}"/>
			<then>
				<fail message="The property 'database.name' should not be empty"/>
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.username}"/>
			<then>
				<fail message="The property 'database.username' should not be empty"/>
			</then>
		</if>			
	</target>
	<!--Extrct WAR and copy Configuration files to temp directory--> 
	<target name="init">
		<echo message="Initializing installation..."/>
		<copy todir="${temp.dir}/caelmir-properties" overwrite="true">
			<fileset dir="${base.dir}/caelmir-properties"/>
		</copy>
		<copy file="caelmir-ds.xml" todir="${temp.dir}" overwrite="true"/>
		<unwar src="${base.dir}/caelmir.war" dest="${temp.dir}/caelmir"/>
	<!--	 <unwar src="${base.dir}/caelmircsm.war" dest="${temp.dir}/tempcsm"/>
		<copy file="${csm.dir}/WEB-INF/classes/DAOConfig.xml" todir="${temp.dir}">
		</copy>-->
 	</target>
	
	<!--Modify Configuration such as Session Timeout, Admin details and JBoss server port-->
	<target name="ConfigureWar">
		<echo message="Modifying caelmir Configuration File..."/>
		<replace dir="${temp.dir}/caelmir/WEB-INF"> 
			<include name="classes/ApplicationResources.properties"/>
		  <replacefilter 
		    token="email.administrative.emailAddress=@@email.administrative.emailAddress@@" 
		    value="email.administrative.emailAddress=${email.administrative.emailAddress}"/>
		  <replacefilter 
		    token="email.sendEmailFrom.emailAddress=@@email.sendEmailFrom.emailAddress@@" 
		  	value="email.sendEmailFrom.emailAddress=${email.sendEmailFrom.emailAddress}"/>
		  <replacefilter 
			token="email.mailServer=@@email.mailServer@@" 
		  	value="email.mailServer=${email.mailServer}"/>	
		  <replacefilter 
			token="server.port=@@server.port@@" 
		  	value="server.port=${jboss.server.port}"/>	
		  <replacefilter 
			token="@@use.proxy.server@@" 
			value="${use.proxy.server}"/>
		  <replacefilter 
			token="@@proxy.host@@" 
			value="${proxy.host}"/>
		  <replacefilter 
			token="@@proxy.port@@" 
			value="${proxy.port}"/>	
		  <replacefilter 
			token="@@proxy.username@@" 
			value="${proxy.username}"/>	
		  <replacefilter 
			token="@@proxy.password@@" 
			value="${proxy.password}"/>	
		</replace>
		<replace file="${temp.dir}/caelmir/WEB-INF/web.xml"> 
			<replacefilter 
				token="&lt;session-timeout>10&lt;/session-timeout>" 
			  	value="&lt;session-timeout>${session.timeout}&lt;/session-timeout>"/>
		</replace>
		<replace file="${temp.dir}/caelmir/WEB-INF/classes/remoteService.xml"> 
			<replacefilter 
				token="@@server.port@@" 
			  	value="${jboss.server.port}"/>
		</replace>
	</target>
	
	<!--Modify Adopter's Institution images, URL of Institution website and Contact Us, Privacy Notice, Disclaimer, Accessibility Text Files-->
	<target name="AdopterConfiguration">
		<echo message="Updating Site Images and Contact Us, Privacy Notice, Disclaimer, Accessibility Text Files"/>
		<copy todir="${temp.dir}/caelmir/images" overwrite="true">
			<fileset dir="${base.dir}/images"/>
		</copy>
		<copy todir="${temp.dir}/caelmir" overwrite="true">
				<fileset dir="${base.dir}/configuration"/>
		</copy>
		<replace dir="${temp.dir}/caelmir/WEB-INF">
			<include name="classes/ApplicationResources.properties"/> 
			<replacefilter 
				token="@@institution.url@@"
				value="${institution.url}"/>
		</replace>
		<replace dir="${temp.dir}/caelmir/WEB-INF">
			<include name="classes/ApplicationResources.properties"/> 
			<replacefilter 
				token="@@institution.logo.tooltip@@"
				value="${institution.name}"/>
			</replace>
	</target>
	
	<!--Modify Configuration For MySQL-->
	<target name="mysqlConfig">
		<echo message="Modifying caelmir MySQL specific Configuration File..."/>
		<replace dir="${temp.dir}/caelmir-properties" propertyfile="caELMIRInstall.properties"> 
	  		<include name="upt.hibernate.cfg.xml"/>
			<include name="caelmir.hibernate.cfg.xml"/>
			<replacefilter 
				token="@@dialect@@" 
			  	value="${mysql.dialect.string}"/>
		</replace>
		<replace dir="${temp.dir}" propertyfile="caELMIRInstall.properties"> 
			<include name="caelmir-ds.xml"/>
			<replacefilter 
				token="@@databaseurl@@" 
			  	value="jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
			<replacefilter 
				token="@@username@@" 
			  	value="${database.username}"/>
			<replacefilter 
				token="@@pasword@@" 
			  	value="${database.password}"/>
			<replacefilter 
				token="@@databasedriver@@" 
			  	value="${mysql.driver.string}"/>
		</replace>
		<!-- Configuring CSM hibernate property File
		<replace dir="${csm.dir}/WEB-INF" propertyfile="caELMIRInstall.properties"> 
			<include name="classes/hibernate.properties"/>
			<include name="conf/hibernate.properties"/>
			<replacefilter 
				token="hibernate.dialect org.hibernate.dialect.MySQLDialect" 
			  	value="hibernate.dialect ${mysql.dialect.h3.string}"/>
			<replacefilter 
				token="hibernate.connection.driver_class com.mysql.jdbc.Driver" 
			  	value="hibernate.connection.driver_class ${mysql.driver.string}"/>
			
			<replacefilter 
				token="hibernate.connection.url jdbc:mysql://ps0154:3306/catissuecore_mysql" 
			  	value="hibernate.connection.url jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
			<replacefilter 
				token="hibernate.connection.username catissue_core" 
			  	value="hibernate.connection.username ${database.username}"/>
			<replacefilter 
				token="hibernate.connection.password catissue_core" 
			  	value="hibernate.connection.password ${database.password}"/>
		</replace>-->
		<replace file="${temp.dir}/caelmir/WEB-INF/classes/hibernate.cfg.xml">
			<replacefilter 
				token="${mysql.dialect.string}" 
			  	value="${mysql.dialect.string}"/>
		</replace>
	</target>
	
	<!--Modify Configuration For Oracle-->
	<target name="oracleConfig">
		<echo message="Modifying caelmir Oracle specific Configuration File..."/>
		<replace dir="${temp.dir}/caelmir-properties" propertyfile="caELMIRInstall.properties"> 
	  		<include name="upt.hibernate.cfg.xml"/>
			<include name="caelmir.hibernate.cfg.xml"/>
			<replacefilter 
				token="@@dialect@@" 
			  	value="${oracle.dialect.string}"/>
		</replace>
		<!-- Configuring Data Source File-->
		<replace dir="${temp.dir}" propertyfile="caELMIRInstall.properties"> 
			<include name="caelmir-ds.xml"/>
			<replacefilter 
				token="@@databaseurl@@" 
			  	value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
			<replacefilter 
				token="@@username@@" 
			  	value="${database.username}"/>
			<replacefilter 
				token="@@pasword@@" 
			  	value="${database.password}"/>
			<replacefilter 
				token="@@databasedriver@@" 
			  	value="${oracle.driver.string}"/>
		</replace>
		<!-- Configuring CSM hibernate property File
		<replace dir="${csm.dir}/WEB-INF" propertyfile="caELMIRInstall.properties"> 
			<include name="classes/hibernate.properties"/>
			<include name="conf/hibernate.properties"/>
			<replacefilter 
				token="hibernate.dialect org.hibernate.dialect.MySQLDialect" 
			  	value="hibernate.dialect ${oracle.dialect.h3.string}"/>
			<replacefilter 
				token="hibernate.connection.driver_class com.mysql.jdbc.Driver" 
			  	value="hibernate.connection.driver_class ${oracle.driver.string}"/>
			
			<replacefilter 
				token="hibernate.connection.url jdbc:mysql://ps0154:3306/catissuecore_mysql" 
			  	value="hibernate.connection.url jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
			<replacefilter 
				token="hibernate.connection.username catissue_core" 
			  	value="hibernate.connection.username ${database.username}"/>
			<replacefilter 
				token="hibernate.connection.password catissue_core" 
			  	value="hibernate.connection.password ${database.password}"/>
		</replace>-->
		<replace file="${temp.dir}/caelmir/WEB-INF/classes/hibernate.cfg.xml">
			<replacefilter 
				token="${mysql.dialect.string}" 
			  	value="${oracle.dialect.string}"/>
		</replace>
	</target>  
	
	<!--Buid New WAR File-->
	<target name="BuildWar">
		<echo message="Creating New Web Application Archieve File..."/>
		<delete file="${temp.dir}/caelmir.war"/>
		<war destfile="${temp.dir}/caelmir.war" webxml="${temp.dir}/caelmir/WEB-INF/web.xml">
			<fileset dir="${temp.dir}/caelmir">
				<exclude name="**/*build*"/>
				<exclude name="**/*WEB-INF*"/>
				<exclude name="**/*servlet.jar*"/>
				<exclude name="**/*log4j-1.2.9.jar*"/>
				<exclude name="**/*hibernate2.jar*"/>
				<exclude name="**/*jta.jar*"/>
				<exclude name="**/.*"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/CVS*"/>	
			</fileset>
		</war>
	<!--	<delete file="${temp.dir}/catissuecorecsm.war"/>
		<war destfile="${temp.dir}/catissuecorecsm.war" webxml="${csm.dir}/WEB-INF/web.xml">
			<fileset dir="${csm.dir}"/>
		</war>-->
	</target>
	
	<!--Copy WAR and Configuration Files to JBOSS Directory-->
	<target name="CopyFiles">
		<echo message="Copying caelmir Application Components..."/>

		<copy todir="${jboss.home.dir}/server/default/caelmir-properties" overwrite="true">
			<fileset dir="${temp.dir}/caelmir-properties">
				<include name="**/*"/>
			</fileset>	
		</copy>
		<copy todir="${jboss.home.dir}/server/default/deploy" overwrite="true">
  			<fileset dir="${temp.dir}">
  				<include name="caelmir.war"/>
  				<include name="caelmir-ds.xml"/>
  			<!--	<include name="catissuecorecsm.war"/>-->
   			</fileset>
  		</copy>
		<replace dir="${jboss.home.dir}/server/default/caelmir-properties"> 
	  		<include name="ApplicationSecurityConfig.xml"/>
			<replacefilter 
					token="@@hibernate-config-file@@" 
				  	value="${jboss.home.dir}/server/default/caelmir-properties/caelmir.hibernate.cfg.xml"/>
		</replace>
		<copy todir="${jboss.home.dir}/server/default/lib" >
			<fileset dir="${lib.dir}">
				<include name="${mysql.lib}"/>
				<include name="${oracle.lib}"/>
			</fileset>
		</copy>
		<copy todir="${jboss.home.dir}/bin" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="DAOConfig.xml"/>
			</fileset>
		</copy>	
  	</target>
	
	<!--Target for Deployment -->
	<target name="Deploy" >
		<antcall target="assert"/>
		<delete dir="${temp.dir}"/>
		<antcall target="init"/>
		<antcall target="ConfigureWar"/>
		<antcall target="AdopterConfiguration"/>
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>		
			<then>
				<antcall target="mysqlConfig"/>
			</then>
			<elseif>	
				<equals arg1="oracle" arg2="${database.type}"/>		
				<then>
					<antcall target="oracleConfig"/>
				</then>
			</elseif>
		</if>
		<antcall target="BuildWar"/>
		<antcall target="CopyFiles"/>
		<antcall target="SendMail"/>
		<delete dir="${temp.dir}"/>
	</target>
	
	<!--Target for Database Creation-->
	<target name="DBInitialize">
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>		
			<then>
				<antcall target="DBInitialized_MySQL"/>
			</then>
			<elseif>	
				<equals arg1="oracle" arg2="${database.type}"/>		
				<then>
					<antcall target="DBInitialized_Oracle"/>
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error"/>
			</else>
		</if>
	</target>

	<!--Target call for both Deployment and Database Creation-->
	<target name="Deploy-all">
		<antcall target="Deploy"/>
		<antcall target="DBInitialize"/>
	</target>

	<!--MySQL Database Creation -->
	<target name="DBInitialized_MySQL">
		<echo message="Initializing MySQL Database for caTISSUECore Application..."/>
		<sql
			driver="${mysql.driver.string}"
		    url="jdbc:mysql://${database.host}:${database.port}/${database.name}"
		    userid="${database.username}"
		    password="${database.password}" 
			onerror="continue">
			<transaction  src="${mysql.sql.dir}/catissuecore.sql"/>
			<transaction  src="${mysql.sql.dir}/InitDB_CreateTable.sql"/>
			<transaction  src="${common.sql.dir}/initDB_Insert_Common.sql"/>
			<transaction  src="${common.sql.dir}/AlterTable.sql"/>
			<transaction  src="${common.sql.dir}/CDE_DummyData_Common.sql"/>
			<transaction  src="${mysql.sql.dir}/csm_catissuecore.sql"/>
			<transaction>commit;</transaction>
			<classpath>
			<fileset dir="${lib.dir}">
			  <include name="*.jar"/>
			  </fileset>
			</classpath> 
		</sql>
  	</target>
	
	<!--Oracle Database Creation -->
	<target name="DBInitialized_Oracle">
		<echo message="Initializing Oracle Database for caelmir Application..."/>
		<sql 
			driver="${oracle.driver.string}"
		    url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
		    userid="${database.username}"
		    password="${database.password}" 
    		onerror="continue"
    		rdbms="oracle">
		  <transaction  src="${oracle.sql.dir}/catissuecore.sql"/>
		  <transaction  src="${oracle.sql.dir}/InitDB_CreateTable.sql"/>
		  <transaction  src="${common.sql.dir}/initDB_Insert_Common.sql"/>
		  <transaction  src="${common.sql.dir}/AlterTable.sql"/>
		  <transaction  src="${common.sql.dir}/CDE_DummyData_Common.sql"/>
		  <transaction  src="${oracle.sql.dir}/CSM_Create_Oracle.sql"/>
		  <transaction>commit;</transaction>	
    	  <classpath>
            <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath> 
		</sql>
		<sql
			driver="${oracle.driver.string}"
		    url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
		    userid="${database.username}"
		    password="${database.password}" 
    		onerror="continue"
    		rdbms="oracle" 
			delimiter="/"
		    delimitertype="row">
		  <transaction  src="${oracle.sql.dir}/CSM_Trigger_Oracle.sql"/>
		  <classpath>
            <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath> 
		</sql>
		<sql
			driver="${oracle.driver.string}"
		    url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
		    userid="${database.username}"
		    password="${database.password}" 
    		onerror="continue"
    		rdbms="oracle">
		  <transaction  src="${oracle.sql.dir}/CSM_InsertData_Oracle.sql"/>	
   		  <transaction  src="${oracle.sql.dir}/CSM_AddConstraints_Oracle.sql"/>
		  <transaction>commit;</transaction>	
		  <classpath>
            <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath> 
		</sql>
	</target>
	<target name="SendMail">
		<echo message="Sending mail to: ${email.administrative.emailAddress}"/>
		<echo message="Sending mail from: ${email.sendEmailFrom.emailAddress}"/>
		<mail mailhost="${email.mailServer}" subject="caTissue Core Successfully Deployed" encoding="plain"
			failonerror="false">
			<from address="${email.sendEmailFrom.emailAddress}"/>
			<to address="${email.administrative.emailAddress}"/>
			<message>
				Dear caElmir Administrator,
					
					This is to validate that caElmir application has been installed at 
				the following location: ${jboss.home.dir}		
				    
					To complete the deployment, you have to now perform the post installation 
				steps described in section "Post Installation Configuration" in the deployment 
				guide (caElmir Deployment Guide.doc). 

					Once you have completed deployment, you should be able to login with the following 
				details:			
				URL: http://localhost:${jboss.server.port}/caelmir
				Username:admin@admin.com
				Password:login123

				Thanking You,
				-caElmir Team				
			</message>
		</mail>
		<echo>
			Please check the Email of ${email.administrative.emailAddress}.
			If the Deployment mail is not received please check your 
			email.administrative.emailAddress and email.sendEmailFrom.emailAddress 
			properties in caELMIRInstall.properties and Re-deploy the Application.
		</echo>	
	</target>
</project>